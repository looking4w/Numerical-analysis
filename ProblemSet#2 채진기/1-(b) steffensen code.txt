# 주어진 세 점으로부터 Aitken's delta square method 를 적용하는 함수입니다.
def newp(p0, p1, p2):
    y = p0 - (p1 - p0) ** 2 / (p2 - (2 * p1) + p0)
    return y

# p 값을 구하기 위한 함수 g(x)입니다.
def g(x):
    y = x ** 2 - 2
    return y

# fixed point 를 찾기위해 함수 g(x)에서 x 를 뺀 함수식을 정의해줍니다.
def f(x):
    y = x ** 2 - x - 2
    return y

if __name__ == '__main__':
    p0 = 2.5
    difference = 0.0001
    n = 0
    while n < 999:
        n = n + 1
        p1 = g(p0)
        p2 = g(p1)
        p0 = newp(p0, p1, p2)
        print(p0)

        if abs(f(p0)) <= difference:
            print(f'{n}번 반복한 결과 오차 {difference} 의 수준으로 fixed point {p0} 을 찾았습니다\n')
            break